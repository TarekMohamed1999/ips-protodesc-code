Port := Bit16;
SequenceNumber := Bit32;
OptionKind := Bit8;
OptionLength := Bit8;

EndOfList := {
	kind	: OptionKind;
} where {
	kind == 0;
};

NoOp := {
	kind	: OptionKind;
} where {
	kind == 1;
};

MSS := {
	kind	: OptionKind;
	length	: OptionLength;
	mss		: Bit16;
} where {
	kind == 2;
	length == 4;
};

Option := {NoOp | MSS};

Packet := {
	src_port	: Port;
	dst_port	: Port;
	seq_num		: SequenceNumber;
	ack_num		: SequenceNumber;
	offset		: Bit4;
	reserved	: Bit6;
	control		: Bit6;
	window		: Bit16;
	checksum	: Bit16;
	urg_ptr		: Bit16;
	options		: Option[];
	eol_option	: EndOfList ? (options.length > 0);
	padding		: Bit[];
	payload		: Bit[];
} where {
	padding.length == 32 - (options.length % 32);
};

#todo: make sure difference between length and width is clear in parser #

PDUs := {Packet};
