from terml.parser import TermLParser as TermLParser
from terml.qnodes import PatternHole as PatternHole, QFunctor as QFunctor, QSome as QSome, QTerm as QTerm, ValueHole as ValueHole
from typing import Any, Optional

def interleave(l: Any, *r: Any): ...
def some(value: Any, quant: Any): ...
def dollarHole(i: Any): ...
def patternHole(i: Any): ...
def taggedHole(t: Any, h: Any): ...
def leafInternal(tag: Any, data: Any, span: Optional[Any] = ...): ...
def makeTerm(t: Any, args: Optional[Any] = ..., span: Optional[Any] = ...): ...

QTermParser: Any

def quasiterm(termString: Any): ...
